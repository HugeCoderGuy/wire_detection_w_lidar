<launch>
  <!-- Arguments-->
  <arg name="model" default="burger" />
  <arg name="x_pos" default="1.0"/>
  <arg name="y_pos" default="0.5"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="multi_robot_name" default=""/>

  <!-- First Trial-->
  <!-- x = 0.05 y = 0.3-->

  <!-- second trial-->
  <!-- x = 1.0 y = 0.5-->

  <!-- third trial-->
  <!---->

  <!--Load Simulation World-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robot_gazebo)/worlds/wire.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- load URDF to the parameter server-->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find robot_description)/urdf/robot.urdf.xacro" />

  <!--Spawn Robot-->
  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_burger -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />

  <!--Launch Robot State Publisher (The node wich publishes joint informations)-->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" value="$(arg multi_robot_name)"/>
  </node>

  <!--Launch Rviz-->
 <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_description)/rviz/robot.rviz"/>

  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthrough" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="/velodyne_points" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: -0.17
      filter_limit_max: 0.15
      filter_limit_negative: False
    </rosparam>
  </node>

  <node pkg="navigation" type="mappingV2.py" name="mappingV2" output="screen" />
  <node pkg="navigation" type="pathplanning.py" name="pathplanning" output="screen" />
  <node pkg="move" type="move_node.py" name="move_node" output="screen" />


</launch>
